diff -Naur nvidia-kmod-545.29.06-x86_64.old/kernel/common/inc/nv-linux.h nvidia-kmod-545.29.06-x86_64/kernel/common/inc/nv-linux.h
--- nvidia-kmod-545.29.06-x86_64.old/kernel/common/inc/nv-linux.h	2023-11-16 03:39:55.000000000 +0100
+++ nvidia-kmod-545.29.06-x86_64/kernel/common/inc/nv-linux.h	2024-02-06 09:08:21.071156667 +0100
@@ -2036,4 +2036,25 @@
 #include <linux/clk-provider.h>
 #endif
 
+#if defined(CONFIG_HAVE_ARCH_PFN_VALID) || LINUX_VERSION_CODE < KERNEL_VERSION(6,1,76)
+#  define nv_pfn_valid pfn_valid
+#else
+/* pre-6.1.76 kernel pfn_valid version without GPL rcu_read_lock/unlock() */
+static inline int nv_pfn_valid(unsigned long pfn)
+{
+        struct mem_section *ms;
+
+        if (PHYS_PFN(PFN_PHYS(pfn)) != pfn)
+                return 0;
+
+        if (pfn_to_section_nr(pfn) >= NR_MEM_SECTIONS)
+                return 0;
+
+        ms = __pfn_to_section(pfn);
+        if (!valid_section(ms))
+                return 0;
+
+        return early_section(ms) || pfn_section_valid(ms, pfn);
+}
+#endif
 #endif  /* _NV_LINUX_H_ */
diff -Naur nvidia-kmod-545.29.06-x86_64.old/kernel/nvidia/nv-mmap.c nvidia-kmod-545.29.06-x86_64/kernel/nvidia/nv-mmap.c
--- nvidia-kmod-545.29.06-x86_64.old/kernel/nvidia/nv-mmap.c	2023-11-16 03:39:55.000000000 +0100
+++ nvidia-kmod-545.29.06-x86_64/kernel/nvidia/nv-mmap.c	2024-02-06 09:08:21.073156702 +0100
@@ -582,7 +582,7 @@
             //
             if ((nv_get_numa_status(nvl) == NV_NUMA_STATUS_ONLINE) &&
                 !IS_REG_OFFSET(nv, access_start, access_len) &&
-                (pfn_valid(PFN_DOWN(mmap_start))))
+                (nv_pfn_valid(PFN_DOWN(mmap_start))))
             {
                 ret = nvidia_mmap_numa(vma, mmap_context);
                 if (ret)
diff -Naur nvidia-kmod-545.29.06-x86_64.old/kernel/nvidia/os-mlock.c nvidia-kmod-545.29.06-x86_64/kernel/nvidia/os-mlock.c
--- nvidia-kmod-545.29.06-x86_64.old/kernel/nvidia/os-mlock.c	2023-11-16 03:39:55.000000000 +0100
+++ nvidia-kmod-545.29.06-x86_64/kernel/nvidia/os-mlock.c	2024-02-06 09:08:21.075156737 +0100
@@ -113,7 +113,7 @@
     for (i = 0; i < page_count; i++)
     {
         if ((nv_follow_pfn(vma, (start + (i * PAGE_SIZE)), &pfn) < 0) ||
-            (!pfn_valid(pfn)))
+            (!nv_pfn_valid(pfn)))
         {
             rmStatus = NV_ERR_INVALID_ADDRESS;
             break;
@@ -187,7 +187,7 @@
         goto done;
     }
 
-    if (pfn_valid(pfn))
+    if (nv_pfn_valid(pfn))
     {
         rmStatus = get_io_pages(vma, start, page_count, (struct page **)result_array);
         if (rmStatus == NV_OK)
diff -Naur nvidia-kmod-545.29.06-x86_64.old/kernel-open/common/inc/nv-linux.h nvidia-kmod-545.29.06-x86_64/kernel-open/common/inc/nv-linux.h
--- nvidia-kmod-545.29.06-x86_64.old/kernel-open/common/inc/nv-linux.h	2023-11-16 03:01:29.000000000 +0100
+++ nvidia-kmod-545.29.06-x86_64/kernel-open/common/inc/nv-linux.h	2024-02-06 09:09:37.290491169 +0100
@@ -2040,4 +2040,25 @@
 #include <linux/clk-provider.h>
 #endif
 
+#if defined(CONFIG_HAVE_ARCH_PFN_VALID) || LINUX_VERSION_CODE < KERNEL_VERSION(6,1,76)
+#  define nv_pfn_valid pfn_valid
+#else
+/* pre-6.1.76 kernel pfn_valid version without GPL rcu_read_lock/unlock() */
+static inline int nv_pfn_valid(unsigned long pfn)
+{
+        struct mem_section *ms;
+
+        if (PHYS_PFN(PFN_PHYS(pfn)) != pfn)
+                return 0;
+
+        if (pfn_to_section_nr(pfn) >= NR_MEM_SECTIONS)
+                return 0;
+
+        ms = __pfn_to_section(pfn);
+        if (!valid_section(ms))
+                return 0;
+
+        return early_section(ms) || pfn_section_valid(ms, pfn);
+}
+#endif
 #endif  /* _NV_LINUX_H_ */
diff -Naur nvidia-kmod-545.29.06-x86_64.old/kernel-open/nvidia/nv-mmap.c nvidia-kmod-545.29.06-x86_64/kernel-open/nvidia/nv-mmap.c
--- nvidia-kmod-545.29.06-x86_64.old/kernel-open/nvidia/nv-mmap.c	2023-11-16 03:01:27.000000000 +0100
+++ nvidia-kmod-545.29.06-x86_64/kernel-open/nvidia/nv-mmap.c	2024-02-06 09:09:37.291491187 +0100
@@ -582,7 +582,7 @@
             //
             if ((nv_get_numa_status(nvl) == NV_NUMA_STATUS_ONLINE) &&
                 !IS_REG_OFFSET(nv, access_start, access_len) &&
-                (pfn_valid(PFN_DOWN(mmap_start))))
+                (nv_pfn_valid(PFN_DOWN(mmap_start))))
             {
                 ret = nvidia_mmap_numa(vma, mmap_context);
                 if (ret)
diff -Naur nvidia-kmod-545.29.06-x86_64.old/kernel-open/nvidia/os-mlock.c nvidia-kmod-545.29.06-x86_64/kernel-open/nvidia/os-mlock.c
--- nvidia-kmod-545.29.06-x86_64.old/kernel-open/nvidia/os-mlock.c	2023-11-16 03:01:27.000000000 +0100
+++ nvidia-kmod-545.29.06-x86_64/kernel-open/nvidia/os-mlock.c	2024-02-06 09:09:37.291491187 +0100
@@ -113,7 +113,7 @@
     for (i = 0; i < page_count; i++)
     {
         if ((nv_follow_pfn(vma, (start + (i * PAGE_SIZE)), &pfn) < 0) ||
-            (!pfn_valid(pfn)))
+            (!nv_pfn_valid(pfn)))
         {
             rmStatus = NV_ERR_INVALID_ADDRESS;
             break;
@@ -187,7 +187,7 @@
         goto done;
     }
 
-    if (pfn_valid(pfn))
+    if (nv_pfn_valid(pfn))
     {
         rmStatus = get_io_pages(vma, start, page_count, (struct page **)result_array);
         if (rmStatus == NV_OK)
